{"version":3,"sources":["../src/helper-functions.js"],"names":["Vue","config","errorHandler","err","vm","info","onError","vueToHTML","vueHTML","data","onRender","opt_onError","onUpdated","$nextTick","$el","innerHTML","template","el","document","createElement","Object","mounted","updated","methods","apply","arguments","pseudoCssToJSON","strLess","openCount","closeCount","replace","match","ruleName","styleName","styleValue","JSON","stringify","trim","parse","e","Error","module","exports"],"mappings":";;AAAA;;;;AAEA;AACAA,GAAG,CAACC,MAAJ,CAAWC,YAAX,GAA0B,UAACC,GAAD,EAAMC,EAAN,EAAUC,IAAV,EAAmB;AAC3C,MAAID,EAAE,IAAIA,EAAE,CAACE,OAAb,EAAsB;AACpBF,IAAAA,EAAE,CAACE,OAAH,CAAWH,GAAX,EAAgBE,IAAhB;AACD;AACF,CAJD;AAMA;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAASE,SAAT,CAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,QAAlC,EAA4CC,WAA5C,EAAyD;AACvD,WAASC,SAAT,GAAqB;AACnB,SAAKC,SAAL,CAAe,YAAY;AACzBH,MAAAA,QAAQ,CAAC,KAAKI,GAAL,CAASC,SAAV,CAAR;AACD,KAFD;AAGD;;AAED,SAAO,IAAIf,GAAJ,CAAQ;AACbgB,IAAAA,QAAQ,EAAE,UAAUR,OAAV,GAAoB,QADjB;AAEbS,IAAAA,EAAE,EAAEC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAFS;AAGbV,IAAAA,IAAI,EAAEW,MAAM,CAACX,IAAD,CAHC;AAIbY,IAAAA,OAAO,EAAET,SAJI;AAKbU,IAAAA,OAAO,EAAEV,SALI;AAMbW,IAAAA,OAAO,EAAE;AACPjB,MAAAA,OADO,qBACG;AACRK,QAAAA,WAAW,IAAIA,WAAW,CAACa,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAf;AACD;AAHM;AANI,GAAR,CAAP;AAYD;AAED;;;;;;;;;;;;AAUA,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,UAAU,GAAG,CAAjB;AAEAF,EAAAA,OAAO,GAAGA,OAAO,CACdG,OADO,CACC,gBADD,EACmB,EADnB,EAEPA,OAFO,CAGN,wCAHM,EAIN,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,EAAkD;AAChD,QAAIF,QAAJ,EAAc;AACZJ,MAAAA,SAAS;AACT,aAAOO,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAT,EAAf,IAAkC,IAAzC;AACD;;AACD,QAAIJ,SAAJ,EAAe;AACb,aAAOE,IAAI,CAACC,SAAL,CAAeH,SAAS,CAACI,IAAV,EAAf,IAAmC,GAAnC,GAAyCF,IAAI,CAACC,SAAL,CAAeF,UAAU,CAACG,IAAX,EAAf,CAAzC,GAA6E,GAApF;AACD;;AACDR,IAAAA,UAAU;AACV,WAAO,IAAP;AACD,GAdK,EAgBPC,OAhBO,CAgBC,aAhBD,EAgBgB,IAhBhB,CAAV;;AAkBA,MAAI;AACF,WAAOK,IAAI,CAACC,SAAL,CAAeD,IAAI,CAACG,KAAL,CAAW,MAAMX,OAAN,GAAgB,GAA3B,CAAf,EAAgD,IAAhD,EAAsD,CAAtD,CAAP;AACD,GAFD,CAGA,OAAOY,CAAP,EAAU;AACR,UAAM,IAAIC,KAAJ,CACJZ,SAAS,KAAKC,UAAd,GACI,mCAAmCD,SAAS,GAAGC,UAAZ,GAAyB,MAAzB,GAAkC,MAArE,IAA+E,aADnF,GAEI,0CAHA,CAAN;AAKD;AACF;;AAEDY,MAAM,CAACC,OAAP,GAAiB;AAAEnC,EAAAA,SAAS,EAATA,SAAF;AAAamB,EAAAA,eAAe,EAAfA,eAAb;AAA8B1B,EAAAA,GAAG,EAAHA;AAA9B,CAAjB","sourcesContent":["import * as Vue from './external/vue.min';\n\n// Allows for error handling in vueToHTML().\nVue.config.errorHandler = (err, vm, info) => {\n  if (vm && vm.onError) {\n    vm.onError(err, info);\n  }\n};\n\n/**\n * Takes an HTML string containing Vue Syntax and converts it to a regular HTML\n * string.\n * @param {string} vueHTML\n *   The HTML string containing Vue Syntax that is to be converted to a\n *   regular HTML string.\n * @param {Object} data\n *   The data object that can be referenced in order to render vueHTML with\n *   the specified data. If null is given a blank object will be used as the\n *   data source.\n * @param {function(html)} onRender\n *   The callback function to be called with the resulting rendered HTML\n *   string. This is called 1st when the function is called and vueHTML is\n *   rendered. It is also called if data is changed thusly triggering an\n *   update of the rendered HTML.\n * @param {Function} opt_onError\n *   The callback function to be called when an error occurs.\n * @returns {Vue}\n *   A Vue instance.\n */\nfunction vueToHTML(vueHTML, data, onRender, opt_onError) {\n  function onUpdated() {\n    this.$nextTick(function () {\n      onRender(this.$el.innerHTML);\n    });\n  }\n\n  return new Vue({\n    template: '<div>' + vueHTML + '</div>',\n    el: document.createElement('div'),\n    data: Object(data),\n    mounted: onUpdated,\n    updated: onUpdated,\n    methods: {\n      onError() {\n        opt_onError && opt_onError.apply(this, arguments);\n      }\n    }\n  });\n}\n\n/**\n * Takes a nested CSS stylesheet string and converts it to JSON to be used by\n * YourJS.css() to make a stylesheet.\n * @param {string} strLess \n *   The nested CSS stylesheet string that should be converted to JSON that\n *   can be used by YourJS.css().\n * @returns {string}\n *   The JSON equivalent of the nested CSS stylesheet string that was passed\n *   in.\n */\nfunction pseudoCssToJSON(strLess) {\n  var openCount = 0;\n  var closeCount = 0;\n\n  strLess = strLess\n    .replace(/\\/\\*[^]*?\\*\\//g, '')\n    .replace(\n      /([^\\{\\};]+)\\{|([^:\\{\\}]+):([^;]+);|\\}/g,\n      function (match, ruleName, styleName, styleValue) {\n        if (ruleName) {\n          openCount++;\n          return JSON.stringify(ruleName.trim()) + \":{\";\n        }\n        if (styleName) {\n          return JSON.stringify(styleName.trim()) + \":\" + JSON.stringify(styleValue.trim()) + \",\";\n        }\n        closeCount++;\n        return \"},\";\n      }\n    )\n    .replace(/,\\s*(\\}|$)/g, '$1');\n\n  try {\n    return JSON.stringify(JSON.parse(\"{\" + strLess + \"}\"), null, 2);\n  }\n  catch (e) {\n    throw new Error(\n      openCount !== closeCount\n        ? \"Pseudo-CSS contains too many \" + (openCount > closeCount ? \"open\" : \"clos\") + \"ing braces.\"\n        : \"Pseudo-CSS couldn't be parsed correctly.\"\n    );\n  }\n}\n\nmodule.exports = { vueToHTML, pseudoCssToJSON, Vue };"],"file":"helper-functions.js"}