{"version":3,"sources":["../src/ctrl.js"],"names":["DEFAULT_PANEL_SETTINGS","html","css","PANEL_PROP_KEYS","normalizeHasher","hasher","hasherType","row","JSON","stringify","map","item","VueHtmlPanelCtrl","$scope","$injector","$rootScope","_","defaultsDeep","panel","events","on","onInitEditMode","bind","onDataReceived","onViewModeChanged","onInitPanelActions","actions","datasetsSubmenu","dataset","reduce","carry","data","index","raw","type","columns","length","push","text","refId","icon","click","apply","divider","role","concat","tablesSubmenu","panelElement","find","toArray","table","getAttribute","path","addEditorTab","logVueScope","datasetIndex","columnNames","rows","JS","dom","href","encodeURIComponent","cName","headers","download","title","formatDate","Date","isEditing","console","debug","getVueScope","ctrl","jElemPC","elemPC","elem","cls","Math","random","replace","append","className","trim","vueScope","vue","$destroy","Vue","template","el","mounted","stylesheet","styleParent","parentNode","removeChild","parse","methods","onError","err","info","error","keyRows","key","has","indexRows","keys","uniqueKeys","uniq","rowIndex","realIndex","indexOf","cloneDeep","getOptionsToRemember","dataList","colNames","c","reduceRight","cell","cellIndex","EXTRA_COLS","range","y","x","isReal","updateView","scope","attrs","element","MetricsPanelCtrl","config","errorHandler","vm","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport * as JS from './external/YourJS.min';\nimport { pseudoCssToJSON, toCSV, tableToArray } from './helper-functions';\nimport * as Vue from './external/vue.min';\n\nconst DEFAULT_PANEL_SETTINGS = {\n  html: '',\n  css: '& {\\n  overflow: auto;\\n}'\n};\n\nconst PANEL_PROP_KEYS = [\n  'fullscreen',\n  'datasource',\n  'description',\n  'targets',\n  'timeFrom',\n  'timeShift',\n  'title',\n  'transparent'\n];\n\nfunction normalizeHasher(hasher) {\n  let hasherType = typeof hasher;\n  return 'function' === hasherType\n    ? hasher\n    : 'string' === hasherType\n      ? row => JSON.stringify(row[hasher])\n      : row => JSON.stringify(hasher.map(item => row[item]));\n}\n\nexport class VueHtmlPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n\n    _.defaultsDeep(this.panel, DEFAULT_PANEL_SETTINGS);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('view-mode-changed', this.onViewModeChanged.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    \n    // Additional events that we can hook into...\n    // this.events.on('render', this.onRender.bind(this));\n    // this.events.on('refresh', this.onRefresh.bind(this));\n    // this.events.on('data-error', this.onDataError.bind(this));\n    // this.events.on('panel-size-changed', this.onPanelSizeChanged.bind(this));\n  }\n\n  /**\n   * Executed when panel actions should be loaded.\n   * @param {*} actions Actions to be added.\n   */\n  onInitPanelActions(actions) {\n    let datasetsSubmenu = this.dataset.reduce((carry, data, index) => {\n      let raw = data.raw;\n      if (raw.type === 'table' && raw.columns.length) {\n        carry.push({\n          text: `Export Dataset \"${raw.refId}\" As CSV`,\n          icon: 'fa fa-fw fa-database',\n          click: `ctrl.csvifyDataset(${index})`\n        });\n      }\n      return carry;\n    }, []);\n    if (datasetsSubmenu.length) {\n      actions.push.apply(actions, [{ divider: true, role: 'Editor' }].concat(datasetsSubmenu));\n    }\n\n    let tablesSubmenu = this.panelElement.find('table:not([data-disallow-download]):not([data-disallow-csv])').toArray().map((table, index) => ({\n      text: table.getAttribute('data-title') ? `Export \"${table.getAttribute('data-title')}\" As CSV` : `Export Table #${index + 1} As CSV`,\n      icon: 'fa fa-fw fa-table',\n      click: `ctrl.csvifyTable(${index})`\n    }));\n    if (tablesSubmenu.length) {\n      actions.push.apply(actions, [{ divider: true, role: 'Editor' }].concat(tablesSubmenu));\n    }\n  }\n\n  /**\n   * Executed before showing edit mode.\n   */\n  onInitEditMode() {\n    let path = 'public/plugins/westc-vuehtml-panel/partials/';\n    this.addEditorTab('Editor', `${path}editor.html`, 1);\n  }\n\n  /**\n   * Executed when the view mode of the panel changes between edit and view.\n   */\n  onViewModeChanged() {\n    this.logVueScope();\n  }\n\n  csvifyDataset(datasetIndex) {\n    let data = this.dataset[datasetIndex];\n    let { columnNames, rows } = data;\n\n    JS.dom({\n      _: 'a',\n      href: 'data:text/csv;charset=utf-8,' + encodeURIComponent(\n        toCSV(\n          rows.map(row => columnNames.map(cName => row[cName])),\n          { headers: columnNames }\n        )\n      ),\n      download: this.panel.title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss)\") + `.dataset-${data.raw.refId}.csv`\n    }).click();\n  }\n\n  csvifyTable(index) {\n    let table = this.panelElement.find('table').toArray()[index];\n    let title = table.getAttribute('data-title') || (this.panel.title + ` Table ${index + 1}`);\n\n    JS.dom({\n      _: 'a',\n      href: 'data:text/csv;charset=utf-8,' + encodeURIComponent(toCSV(tableToArray(table))),\n      download: title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss)\") + `.csv`\n    }).click();\n  }\n\n  /**\n   * Adds the Vue scope to the console log if in editing mode.\n   */\n  logVueScope() {\n    // If in editing mode show the html scope.\n    if (this.panel.isEditing) {\n      console.debug('Data values available:', this.getVueScope());\n    }\n  }\n\n  /**\n   * Should only be called when the panel should re-rendered fresh.  Not defined\n   * as render because there is no need to re-render every time the window\n   * resizes or the panel resizes.\n   */\n  updateView() {\n    let ctrl = this;\n    let jElemPC = ctrl.panelElement;\n    let elemPC = jElemPC[0];\n    let elem = JS.dom({ _: 'div' });\n    let panel = ctrl.panel;\n    let cls = ('_' + Math.random()).replace(/0\\./, +new Date);\n\n    jElemPC.html('').append(elem);\n\n    elemPC.className = elemPC.className.replace(/(^|\\s+)_\\d+(?=\\s+|$)/g, ' ').trim() + ' ' + cls;\n\n    // Data available to the HTML code.\n    let vueScope = ctrl.getVueScope();\n\n    if (ctrl.vue) {\n      ctrl.vue.$destroy();\n    }\n\n    ctrl.vue = new Vue({\n      template: `<div>${panel.html}</div>`,\n      el: elem,\n      data: vueScope,\n      mounted() {\n        // Remove the old stylesheet from the document if it exists.\n        let stylesheet = ctrl.stylesheet;\n        let styleParent = stylesheet && stylesheet.parentNode;\n        if (styleParent) {\n          styleParent.removeChild(stylesheet);\n        }\n\n        // Add the nested CSS to the panel.\n        ctrl.stylesheet = JS.css(JSON.parse(pseudoCssToJSON(panel.css)), '.' + cls);\n      },\n      methods: {\n        onError(err, info) {\n          console.error('VueHtmlPanelCtrl error:', { err, info });\n        },\n        keyRows(rows, hasher) {\n          hasher = normalizeHasher(hasher);\n          return rows.reduce((carry, row) => {\n            let key = hasher(row);\n            carry[key] = _.has(carry, key) ? carry[key].concat([row]) : [row];\n            return carry;\n          }, {});\n        },\n        indexRows(rows, hasher) {\n          hasher = normalizeHasher(hasher);\n          let keys = rows.map(row => hasher(row));\n          let uniqueKeys = _.uniq(keys);\n          return rows.reduce((carry, row, rowIndex) => {\n            let realIndex = uniqueKeys.indexOf(keys[rowIndex]);\n            carry[realIndex] = _.has(carry, realIndex) ? carry[realIndex].concat([row]) : [row];\n            return carry;\n          }, []);\n        }\n      }\n    });\n  }\n\n  /**\n   * Gets the object containing the variables available to the Vue HTML.\n   * @returns {Object}\n   *   The Vue scope that is made available to the Vue HTML.\n   */\n  getVueScope() {\n    return _.cloneDeep({\n      dataset: this.dataset,\n      panel: this.panel.getOptionsToRemember()\n    });\n  }\n\n  /**\n   * Executed whenever data is received from the database for this panel.\n   * @param {Array} dataList \n   *   An array of objects containing the data that is collected from the\n   *   database.\n   */\n  onDataReceived(dataList) {\n    if (dataList && dataList.length) {\n      this.dataset = dataList.map(data => {\n        let colNames = data.columns.map(c => 'string' === typeof c ? c : c.text);\n        return {\n          columnNames: colNames,\n          rows: data.rows.map(row => {\n            return row.reduceRight((carry, cell, cellIndex) => {\n              carry[colNames[cellIndex]] = cell;\n              return carry;\n            }, {});\n          }),\n          raw: data\n        };\n      });\n    }\n    else {\n      let EXTRA_COLS = 2;\n      this.dataset = [\n        {\n          columns: [{ text: \"X\" }, { text: \"X * X\" }, { text: \"X + X\" }].concat(_.range(EXTRA_COLS).map(y => ({ text: `${y} / Math.random()` }))),\n          rows: _.range(150).map(x => [x, x * x, x + x].concat(_.range(EXTRA_COLS).map(y => y / Math.random()))),\n          isReal: false,\n          type: 'table'\n        }\n      ];\n    }\n\n    this.updateView();\n    this.logVueScope();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.element = elem;\n    this.panelElement = elem.find('.panel-content');\n  }\n}\n\n// Allows for error handling in vueToHTML().\nVue.config.errorHandler = (err, vm, info) => {\n  if (vm && vm.onError) {\n    vm.onError(err, info);\n  }\n};\n\nVueHtmlPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}