{"version":3,"sources":["../src/ctrl.js"],"names":["SEL_DISABLE_DOWNLOAD_CSV","replace","DEFAULT_PANEL_SETTINGS","html","css","canDownloadDatasets","emType","refreshRate","REFRESH_RATE_OPTIONS","value","text","EM_TYPES","normalizeHasher","hasher","hasherType","row","JSON","stringify","map","item","VueHtmlPanelCtrl","$scope","$injector","$rootScope","_","defaultsDeep","panel","emIsContentHeight","events","on","onInitEditMode","bind","onDataError","onDataReceived","onViewModeChanged","onInitPanelActions","title","message","isMonospace","panelElement","append","JS","dom","style","display","alignItems","textAlign","height","$","cls","margin","color","actions","tablesSubmenu","find","toArray","reduce","carry","table","index","jQuery","is","push","getAttribute","icon","click","length","apply","divider","role","concat","datasetsSubmenu","dataset","data","raw","type","columns","refId","path","addEditorTab","logVueScope","html2canvas","then","canvas","href","toDataURL","download","formatDate","Date","datasetIndex","columnNames","rows","encodeURIComponent","cName","headers","isEditing","console","log","getVueScope","jElemPC","size","width","Math","min","max","ctrl","elemPC","elem","random","render","className","trim","vueScope","vue","$destroy","Vue","template","el","mounted","stylesheet","styleParent","parentNode","removeChild","parse","methods","onError","err","info","renderError","error","keyRows","key","has","indexRows","keys","uniqueKeys","uniq","rowIndex","realIndex","indexOf","refreshTimeout","clearTimeout","setTimeout","updateView","cloneDeep","datasets","datasetsById","getOptionsToRemember","themeType","config","theme","url","encode","decode","decodeURIComponent","toParams","objValues","opt_prefixVar","Object","entries","arrParams","join","getTimeValues","opt_name","result","time","timeSrv","from","to","getTimeParams","getVarValues","opt_filter","opt_negate","arrFilter","some","filter","RegExp","test","templateSrv","variables","values","variable","name","varValues","current","isAll","includeAll","getVarParams","offsetDateTZ","date","opt_tzOffset","getTimezoneOffset","event","statusText","dataList","a","b","datasetNames","forEach","datapoints","target","colNames","c","reduceRight","cell","cellIndex","slice","typeOf","scope","attrs","element","MetricsPanelCtrl","errorHandler","vm","prototype","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport * as JS from './external/YourJS.min';\nimport * as html2canvas from './external/html2canvas.min';\nimport { pseudoCssToJSON, toCSV, tableToArray } from './helper-functions';\nimport * as Vue from './external/vue.min';\nimport config from 'app/core/config';\n\nconst SEL_DISABLE_DOWNLOAD_CSV = '<llow-csv><ble-csv><llow-download><ble-download>'.replace(/<(.+?)>/g, ':not([data-disa$1])');\n\nconst DEFAULT_PANEL_SETTINGS = {\n  html: '<h2>Output of available datasets:</h2>\\n<div><pre>{{ JSON.stringify(dataset, null, 2) }}</pre></div>',\n  css: '& {\\n  overflow: auto;\\n}',\n  canDownloadDatasets: true,\n  emType: null,\n  refreshRate: null\n};\n\nconst REFRESH_RATE_OPTIONS = [\n  { value: null, text: 'Never' },\n  { value: 1, text: 'Every second' },\n  { value: 60, text: 'Every minute' }\n];\n\nconst EM_TYPES = [\n  { value: null, text: 'Default' },\n  { value: 'CONTENT-HEIGHT', text: 'Content Height' },\n  { value: 'CONTENT-WIDTH', text: 'Content Width' },\n  { value: 'CONTENT-MIN-DIM', text: 'Minimum Content Dimension' },\n  { value: 'CONTENT-MAX-DIM', text: 'Maximum Content Dimension' },\n  { value: 'CONTENT-AVG-DIM', text: 'Average of Content Dimensions' }\n];\n\nfunction normalizeHasher(hasher) {\n  let hasherType = typeof hasher;\n  return 'function' === hasherType\n    ? hasher\n    : 'string' === hasherType\n      ? row => JSON.stringify(row[hasher])\n      : row => JSON.stringify(hasher.map(item => row[item]));\n}\n\nexport class VueHtmlPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n\n    _.defaultsDeep(this.panel, DEFAULT_PANEL_SETTINGS);\n\n    // If panel.emIsContentHeight was used, convert it to panel.emType.\n    let { emIsContentHeight } = this.panel;\n    if (emIsContentHeight != null) {\n      this.panel.emType = emIsContentHeight ? 'CONTENT-HEIGHT' : null;\n      delete this.panel.emIsContentHeight;\n    }\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('view-mode-changed', this.onViewModeChanged.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    \n    // Additional events that we can hook into...\n    // this.events.on('component-did-mount', this.onComponentDidMount.bind(this));\n    // this.events.on('panel-size-changed', this.onPanelSizeChanged.bind(this));\n    // this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    // this.events.on('refresh', this.onRefresh.bind(this));\n    // this.events.on('render', this.onRender.bind(this));\n  }\n\n  renderError(title, message, isMonospace) {\n    this.panelElement.html('').append(JS.dom({\n      _: 'div', style: { display: 'flex', alignItems: 'center', textAlign: 'center', height: '100%' }, $: [\n        {\n          _: 'div',\n          cls: 'alert alert-error',\n          style: { margin: '0px auto' },\n          $: {\n            _: 'div',\n            $: [\n              { _: 'h2', style: { color: '#FFF' }, text: title },\n              { _: isMonospace ? 'pre' : 'div', text: message }\n            ]\n          }\n        }\n      ]\n    }));\n  }\n\n  /**\n   * Executed when panel actions should be loaded.\n   * @param {*} actions Actions to be added.\n   */\n  onInitPanelActions(actions) {\n    let tablesSubmenu = this.panelElement.find('table').toArray().reduce(\n      (carry, table, index) => {\n        if (jQuery(table).is(SEL_DISABLE_DOWNLOAD_CSV)) {\n          carry.push({\n            text: table.getAttribute('data-title') ? `Export \"${table.getAttribute('data-title')}\" As CSV` : `Export Table #${index + 1} As CSV`,\n            icon: 'fa fa-fw fa-table',\n            click: `ctrl.csvifyTable(${index})`\n          });\n        }\n        return carry;\n      },\n      []\n    );\n    if (tablesSubmenu.length) {\n      actions.push.apply(actions, [{ divider: true, role: 'Editor' }].concat(tablesSubmenu));\n    }\n\n    if (this.panel.canDownloadDatasets) {\n      let datasetsSubmenu = this.dataset.reduce((carry, data, index) => {\n        let raw = data.raw;\n        if (raw.type === 'table' && raw.columns.length) {\n          carry.push({\n            text: `Export Dataset \"${raw.refId}\" As CSV`,\n            icon: 'fa fa-fw fa-database',\n            click: `ctrl.csvifyDataset(${index})`\n          });\n        }\n        return carry;\n      }, []);\n      if (datasetsSubmenu.length) {\n        actions.push.apply(actions, [{ divider: true, role: 'Editor' }].concat(datasetsSubmenu));\n      }\n    }\n\n    actions.push({\n      text: 'Screenshot As PNG',\n      icon: 'fa fa-fw fa-image',\n      click: 'ctrl.downloadPNG()'\n    });\n  }\n\n  /**\n   * Executed before showing edit mode.\n   */\n  onInitEditMode() {\n    let path = 'public/plugins/westc-vuehtml-panel/partials/';\n    this.addEditorTab('Editor', `${path}editor.html`, 1);\n  }\n\n  /**\n   * Executed when the view mode of the panel changes between edit and view.\n   */\n  onViewModeChanged() {\n    this.logVueScope();\n  }\n\n  downloadPNG() {\n    html2canvas(this.panelElement.find('div')[0]).then(canvas => {\n      JS.dom({\n        _: 'a',\n        href: canvas.toDataURL(),\n        download: this.panel.title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss)\") + '.screenshot.png'\n      }).click();\n    });\n  }\n\n  csvifyDataset(datasetIndex) {\n    let data = this.dataset[datasetIndex];\n    let { columnNames, rows } = data;\n\n    JS.dom({\n      _: 'a',\n      href: 'data:text/csv;charset=utf-8,' + encodeURIComponent(\n        toCSV(\n          rows.map(row => columnNames.map(cName => row[cName])),\n          { headers: columnNames }\n        )\n      ),\n      download: this.panel.title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss)\") + `.dataset-${data.raw.refId}.csv`\n    }).click();\n  }\n\n  csvifyTable(index) {\n    let table = this.panelElement.find('table').toArray()[index];\n    let title = table.getAttribute('data-title') || (this.panel.title + ` Table ${index + 1}`);\n\n    JS.dom({\n      _: 'a',\n      href: 'data:text/csv;charset=utf-8,' + encodeURIComponent(toCSV(tableToArray(table))),\n      download: title + JS.formatDate(new Date, \" (YYYY-MM-DD 'at' H.mm.ss)\") + `.csv`\n    }).click();\n  }\n\n  /**\n   * Adds the Vue scope to the console log if in editing mode.\n   */\n  logVueScope() {\n    // If in editing mode show the html scope.\n    if (this.panel.isEditing) {\n      console.log('Data values available:', this.getVueScope());\n    }\n  }\n\n  render() {\n    // If an `em` unit is supposed to be based on the size of the content area\n    // make sure to recalculate it.\n    let jElemPC = this.panelElement;\n    let { emType } = this.panel;\n    let size =\n      'CONTENT-HEIGHT' === emType\n        ? jElemPC.height()\n        : 'CONTENT-WIDTH' === emType\n          ? jElemPC.width()\n          : 'CONTENT-MIN-DIM' === emType\n            ? Math.min(jElemPC.height(), jElemPC.width())\n            : 'CONTENT-MAX-DIM' === emType\n              ? Math.max(jElemPC.height(), jElemPC.width())\n              : 'CONTENT-AVG-DIM' === emType\n                ? (jElemPC.height() + jElemPC.width()) / 2\n                : null;\n    jElemPC.css('font-size', size != null ? size + 'px' : '');\n  }\n\n  /**\n   * Should only be called when the panel should re-rendered fresh.  Not defined\n   * as render because there is no need to re-render every time the window\n   * resizes or the panel resizes.\n   */\n  updateView() {\n    let ctrl = this;\n    let jElemPC = ctrl.panelElement;\n    let elemPC = jElemPC[0];\n    let elem = JS.dom({ _: 'div' });\n    let panel = ctrl.panel;\n    let cls = ('_' + Math.random()).replace(/0\\./, +new Date);\n\n    this.render(); // Recalculates `em` size if it is supposed to.\n\n    jElemPC.html('').append(elem);\n\n    elemPC.className = elemPC.className.replace(/(^|\\s+)_\\d+(?=\\s+|$)/g, ' ').trim() + ' ' + cls;\n\n    // Data available to the HTML code.\n    let vueScope = ctrl.getVueScope();\n\n    if (ctrl.vue) {\n      ctrl.vue.$destroy();\n    }\n\n    ctrl.vue = new Vue({\n      template: `<div>${panel.html}</div>`,\n      el: elem,\n      data: vueScope,\n      mounted() {\n        // Remove the old stylesheet from the document if it exists.\n        let stylesheet = ctrl.stylesheet;\n        let styleParent = stylesheet && stylesheet.parentNode;\n        if (styleParent) {\n          styleParent.removeChild(stylesheet);\n        }\n\n        // Add the nested CSS to the panel.\n        ctrl.stylesheet = JS.css(JSON.parse(pseudoCssToJSON(panel.css)), '.' + cls);\n      },\n      methods: {\n        onError(err, info) {\n          ctrl.renderError('VueJS Error', err.message, true);\n          console.error('VueHtmlPanelCtrl error:', { err, info });\n        },\n        keyRows(rows, hasher) {\n          hasher = normalizeHasher(hasher);\n          return rows.reduce((carry, row) => {\n            let key = hasher(row);\n            carry[key] = _.has(carry, key) ? carry[key].concat([row]) : [row];\n            return carry;\n          }, {});\n        },\n        indexRows(rows, hasher) {\n          hasher = normalizeHasher(hasher);\n          let keys = rows.map(row => hasher(row));\n          let uniqueKeys = _.uniq(keys);\n          return rows.reduce((carry, row, rowIndex) => {\n            let realIndex = uniqueKeys.indexOf(keys[rowIndex]);\n            carry[realIndex] = _.has(carry, realIndex) ? carry[realIndex].concat([row]) : [row];\n            return carry;\n          }, []);\n        }\n      }\n    });\n\n    let refreshRate = ctrl.panel.refreshRate;\n    if (refreshRate > 0 && ~~refreshRate === refreshRate) {\n      // Make sure that panel only gets refreshed according to the specified\n      // interval.\n      if (ctrl.refreshTimeout) {\n        clearTimeout(ctrl.refreshTimeout);\n        ctrl.refreshTimeout = null;\n      }\n\n      ctrl.refreshTimeout = setTimeout(function() {\n        // Only update if the refresh rate remains unchanged\n        if (refreshRate === ctrl.panel.refreshRate) {\n          ctrl.updateView();\n        }\n      }, refreshRate * 1e3);\n    }\n  }\n\n  /**\n   * Gets the object containing the variables available to the Vue HTML.\n   * @returns {Object}\n   *   The Vue scope that is made available to the Vue HTML.\n   */\n  getVueScope() {\n    let ctrl = this;\n    return _.cloneDeep({\n      dataset: ctrl.dataset,\n      datasets: ctrl.datasets,\n      datasetsById: ctrl.datasetsById,\n      panel: ctrl.panel.getOptionsToRemember(),\n      JS,\n      themeType: config.theme.type,\n      url: {\n        encode(value) {\n          return encodeURIComponent(value + '').replace(/%20/g, '+');\n        },\n        decode(value) {\n          return decodeURIComponent((value + '').replace(/\\+/g, '%20'));\n        },\n        toParams(objValues, opt_prefixVar) {\n          return Object.entries(objValues).reduce((arrParams, [key, value]) => {\n            return arrParams.concat(\n              JS.toArray(value).map(\n                value => this.encode((opt_prefixVar ? 'var-' : '') + key) + '=' + this.encode(value)\n              )\n            );\n          }, []).join('&');\n        },\n        getTimeValues(opt_name) {\n          let result = {};\n          let { time } = ctrl.timeSrv;\n          if (opt_name != 'to') {\n            result.from = time.from;\n          }\n          if (opt_name != 'from') {\n            result.to = time.to;\n          }\n          return result;\n        },\n        getTimeParams(opt_name) {\n          return this.toParams(this.getTimeValues(opt_name));\n        },\n        getVarValues(opt_filter, opt_negate) {\n          if (opt_filter && 'function' !== typeof opt_filter) {\n            let arrFilter = JS.toArray(opt_filter);\n            opt_filter = key => arrFilter.some(\n              filter => filter instanceof RegExp ? filter.test(key) : (filter == key)\n            );\n          }\n          \n          return ctrl.templateSrv.variables.reduce(\n            (values, variable) => {\n              // At times current.value is a string and at times it is an array.\n              let key = variable.name;\n              let varValues = JS.toArray(variable.current.value);\n              let isAll = variable.includeAll && varValues.length === 1 && varValues[0] === '$__all';\n              varValues = isAll ? [variable.current.text] : varValues;\n              if (opt_filter) {\n                varValues = varValues.filter(value => !!opt_filter(key, value) === !opt_negate);\n              }\n              if (varValues.length) {\n                values[key] = varValues;\n              }\n              return values;\n            },\n            {}\n          );\n        },\n        getVarParams(opt_filter, opt_negate) {\n          return this.toParams(this.getVarValues(opt_filter, opt_negate), true);\n        }\n      },\n      offsetDateTZ(date, opt_tzOffset) {\n        date = new Date(date);\n        opt_tzOffset = opt_tzOffset == null ? date.getTimezoneOffset() : opt_tzOffset;\n        return new Date(+date + opt_tzOffset * 6e4);\n      }\n    });\n  }\n\n  onDataError(event) {\n    this.renderError(event.statusText, event.data.message, true);\n  }\n\n  /**\n   * Executed whenever data is received from the database for this panel.\n   * @param {Array} dataList \n   *   An array of objects containing the data that is collected from the\n   *   database.\n   */\n  onDataReceived(dataList, a, b) {\n    this.datasets = this.dataset = [];\n    this.datasetsById = {};\n\n    if (dataList) {\n      let datasetNames = [];\n\n      dataList.forEach(data => {\n        let { refId, datapoints, target, columns, rows } = data;\n        let datasetIndex = datasetNames.indexOf(refId);\n        let dataset;\n\n        if (data.type === 'table') {\n          let colNames = columns.map(c => 'string' === typeof c ? c : c.text);\n\n          this.datasetsById[refId] = dataset = {\n            columnNames: colNames,\n            rows: rows.map(row => {\n              return row.reduceRight((carry, cell, cellIndex) => {\n                carry[colNames[cellIndex]] = cell;\n                return carry;\n              }, {});\n            }),\n            raw: data\n          };\n        }\n        else {\n          dataset = this.datasetsById[refId] = this.datasetsById[refId]\n            || { columnNames: ['value', 'time', 'metric'], rows: [], raw: [], refId };\n\n          datapoints.forEach(row => {\n            dataset.rows.push(row.slice(0, 2).concat([target]));\n          });\n\n          if (JS.typeOf(dataset.raw) === 'Array') {\n            dataset.raw.push(data);\n          }\n        }\n\n        if (datasetIndex < 0) {\n          datasetIndex = datasetNames.push(refId) - 1;\n          this.datasets[datasetIndex] = this.dataset[datasetIndex] = dataset;\n        }\n      });\n    }\n\n    this.updateView();\n    this.logVueScope();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.element = elem;\n    this.panelElement = elem.find('.panel-content');\n  }\n}\n\n// Allows for error handling in vueToHTML().\nVue.config.errorHandler = (err, vm, info) => {\n  if (vm && vm.onError) {\n    vm.onError(err, info);\n  }\n};\n\nVueHtmlPanelCtrl.prototype.REFRESH_RATE_OPTIONS = REFRESH_RATE_OPTIONS;\nVueHtmlPanelCtrl.prototype.EM_TYPES = EM_TYPES;\n\nVueHtmlPanelCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}